version: '3.8'

services:
  # AI Career Coach API Backend
  api:
    build: 
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "9000:9000"
    environment:
      - HOST=0.0.0.0
      - PORT=9000
      - LOG_LEVEL=INFO
    env_file:
      - ./api/.env
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - qdrant
    networks:
      - career-coach-network

  # Frontend Next.js Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:9000
    restart: unless-stopped
    depends_on:
      - api
    networks:
      - career-coach-network

  # Qdrant Vector Database (Optional - for persistent storage)
  qdrant:
    image: qdrant/qdrant:v1.7.4
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_storage:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    restart: unless-stopped
    networks:
      - career-coach-network

  # Redis for caching (Optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - career-coach-network

  # Nginx reverse proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - api
      - frontend
    restart: unless-stopped
    networks:
      - career-coach-network

volumes:
  qdrant_storage:
  redis_data:

networks:
  career-coach-network:
    driver: bridge